#!/bin/bash
#############################################################################
#
# Author: Mushaheed Kapadia 
#
# $1 = type of file (controller/model/stylesheets/scripts/src/model) 
# $2 = path to the file from there || 
# 
#check if user is looking for help
if [ $1 == '-h' ] 
then
	echo ''
	echo 'For use: '
	echo ' ./easy_site/makefile [ -c ] <model|controller|stylesheet|script|src> <path-to-file-from-that-folder>'
	echo ' -c flag only to be used for creating a controller script along with a src script'
	echo 'Example: '
	echo ' new stylesheet: ./makefile stylesheet new.css'
	echo ''
	exit
fi

#set it to the public directory
filetype=$1
filepath=$2
public="php_framework/public/$1s"
public2=""

if [ $1 == '-c' ]
then 
	filetype=$2
	filepath=$3
	public="php_framework/public/$2s"

	if [ $filetype == 'src' ] 
	then 
		public2="php_framework/controllers"
	fi
	
	if [ $filetype == 'controller' ] 
	then 	
		public2="php_framework/public/srcs"
	fi
fi

#check if user is creating model object
if [ $filetype == "model" ] 
then 
	#if the user is creating model, change it to the model directory
	public="php_framework/models"
fi

#check if user is creating controller script
if [ $filetype == "controller" ] 
then 
	#if user is creating a controller, set the path to the controller directory
	public="php_framework/controllers"
fi

#check if the file already exists
if [ -a $public/$filepath ] 
then	
	echo 'File already exists!'
	exit
fi

#check if the counterpart file exists
if [ $1 == '-c' ] 
then 
	if [ -a $public2/$filepath ] 
	then 
		echo 'Counterpart File already exists!'
		exit
	fi
fi

#make sure that all the directories exist along the way

#number of directories  + 1
total=`echo "$filepath" | tr '/' '\n' | wc -l`

#seperate directory names
path=`echo "$filepath" | tr '/' '\n'`

#get the filename
filename=`echo "$filepath" | tr '/' '\n' | tail -n 1`
classname=`echo "$filename" | tr '.' '\n' | head -n 1`

#counter
counter=1

#editiable file path 
newpath=$public

#create the path as you go along if it doesn't exist
for i in $path
do 
	if [ "$counter" -lt "$total" ]
	then
		if [ ! -d $newpath/$i ]
		then
			#mkdir $newpath/$i
			newpath=$newpath/$i
			echo $newpath
			counter=$((counter+1))
		fi
	fi
done

#check directories for counter part file
if [ $1 == '-c' ] 
then
	#number of directories  + 1
	total=`echo "$filepath" | tr '/' '\n' | wc -l`

	#seperate directory names
	path=`echo "$filepath" | tr '/' '\n'`

	#get the filename
	filename=`echo "$filepath" | tr '/' '\n' | tail -n 1`
	classname=`echo "$filename" | tr '.' '\n' | head -n 1`

	#counter
	counter=1

	#editiable file path 
	newpath=$public2

	#create the path as you go along if it doesn't exist
	for i in $path
	do 
		if [ "$counter" -lt "$total" ]
		then
			if [ ! -d $newpath/$i ]
			then
				#mkdir $newpath/$i
				newpath=$newpath/$i
				echo $newpath
				counter=$((counter+1))
			fi
		fi
	done
fi

#create the file 
touch $public/$filepath

#create counter part file
if [ $1 == '-c' ] 
then 
	touch $public2/$filepath
fi 

#set up the initial source file for the user
if [ $filetype == "src" ]
then 
	echo "<?php" >> $public/$filepath
	echo "/* php goes here */" >> $public/$filepath
	echo "" >> $public/$filepath
	echo "" >> $public/$filepath
	echo "?>" >> $public/$filepath
	echo "<html>" >> $public/$filepath
	echo "  <head>" >> $public/$filepath
	echo "    <?php require('head.html'); ?>" >> $public/$filepath
	echo "  </head>" >> $public/$filepath
	echo "  <body>"  >> $public/$filepath
	echo "  </body>" >> $public/$filepath
	echo "</html>" >> $public/$filepath
fi

if [ $1 == '-c' ] 
then 
	if [ $filetype == "controller" ] 
	then 
		echo "<?php" >> $public2/$filepath
		echo "/* php goes here */" >> $public2/$filepath
		echo "" >> $public2/$filepath
		echo "" >> $public2/$filepath
		echo "?>" >> $public2/$filepath
		echo "<html>" >> $public2/$filepath
		echo "  <head>" >> $public2/$filepath
		echo "    <?php require('head.html'); ?>" >> $public2/$filepath
		echo "  </head>" >> $public2/$filepath
		echo "  <body>"  >> $public2/$filepath
		echo "  </body>" >> $public2/$filepath
		echo "</html>" >> $public2/$filepath
	fi	
fi

#set up the initial model file for the user
if [ $filetype == "model" ]
then 
	echo "<?php" >> $public/$filepath
	echo "  /**" >> $public/$filepath
	echo "   * $classname" >> $public/$filepath
	echo "   * Created by: " >> $public/$filepath
	echo "   */" >> $public/$filepath
	echo "  class $classname {" >> $public/$filepath
	echo "" >> $public/$filepath
	echo "    //mark" >> $public/$filepath
	echo "" >> $public/$filepath
	echo "    function __construct(){" >> $public/$filepath
	echo "" >> $public/$filepath
	echo "    }" >> $public/$filepath
	echo "  }" >> $public/$filepath
	echo "?>" >> $public/$filepath
fi

#set up the intial controller file for the user
if [ $filetype == "controller" ]  || [ $1 == '-c' ]
then 
	echo "<?php" >> $public/$filepath
	echo "" >> $public/$filepath
	echo "" >> $public/$filepath
	echo "?>" >> $public/$filepath
fi

if [ $1 == '-c' ]
then 
	if [ $filetype == 'src' ] 
	then
		echo "<?php" >> $public2/$filepath
		echo "" >> $public2/$filepath
		echo "" >> $public2/$filepath
		echo "?>" >> $public2/$filepath
	fi	
fi

#check if the file(s) got created
if [ $1 == '-c' ] 
then 
	if [ -a $public2/$filepath ] 
	then 
		echo 'Counter part file created successfully too!'
	fi
fi

if [ -a $public/$filepath ]
then
	echo 'File created successfully!'
	exit
fi

#unable to create good 
echo 'Failed to create file'
